version: "3.8"

services:
  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - BACKEND_URL=http://localhost:8001
      - DATABASE_URL=postgresql://ciberpunk:ciberpunk123@db:5432/ciberpunkdb
      - PYTHONPATH=/app  # Importante para que Python encuentre los mÃ³dulos
    volumes:
      - ./data:/data
      - ./backend:/app  # Monta todo el backend en /app
    networks:
      app_net:
        ipv4_address: 172.80.0.200
    command: >
      sh -c "alembic -c /app/alembic.ini upgrade head
      && uvicorn main:app --host 0.0.0.0 --port 8001"
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=/api
      - HOST=0.0.0.0
      - PORT=3000
    depends_on:
      - backend
    networks:
      app_net:
        ipv4_address: 172.80.0.100

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ciberpunk
      POSTGRES_PASSWORD: ciberpunk123
      POSTGRES_DB: ciberpunkdb
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      # - ./backups:/backups  # Volumen para backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ciberpunk -d ciberpunkdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      app_net:
        ipv4_address: 172.80.0.150

volumes:
  postgres_data:
  # alembic_migrations:  # Volumen opcional para migraciones si no quieres montar el directorio local

networks:
  app_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.80.0.0/16